// @file ns-audio-rpc.erpc
//!
//! @brief Interface definition for neuralspot audio RPC
//!
//!

/*
 * Generated by erpcgen 1.9.1 on Thu Aug 25 16:32:36 2022.
 *
 * AUTOGENERATED - DO NOT EDIT
 */


#if !defined(_ns_audio_rpc_h_)
#define _ns_audio_rpc_h_

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include "erpc_version.h"

#if 10901 != ERPC_VERSION_NUMBER
#error "The generated shim code version is different to the rest of eRPC code."
#endif

#if !defined(ERPC_TYPE_DEFINITIONS)
#define ERPC_TYPE_DEFINITIONS

// Enumerators data types declarations
typedef enum nsAudioStatus_e
{
    nsAudioRPCStatus_success = 0,
    nsAudioRPCStatus_failure = 1
} nsAudioStatus_e;

typedef enum nsAudioAction_e
{
    nsAudioPlayAudio = 0,
    nsAudioDisplayAudio = 1,
    nsAudioAppendToAudioFile = 2
} nsAudioAction_e;

// Aliases data types declarations
typedef struct nsAudioBuffer_t nsAudioBuffer_t;
typedef struct audioCommand_t audioCommand_t;

// Structures/unions data types declarations
struct nsAudioBuffer_t
{
    uint32_t bufferLength;
    uint8_t * buf;
};

struct audioCommand_t
{
    nsAudioAction_e cmd;
    nsAudioBuffer_t buf;
};


// Constant variable declarations
extern const int32_t max_audio_buffer_length;

#endif // ERPC_TYPE_DEFINITIONS

/*! @brief ns_audio_rpc identifiers */
enum _ns_audio_rpc_ids
{
    kns_audio_rpc_service_id = 1,
    kns_audio_rpc_erpcDumpAudioBuffer_id = 1,
};

#if defined(__cplusplus)
extern "C" {
#endif

//! @name ns_audio_rpc
//@{
nsAudioStatus_e erpcDumpAudioBuffer(const audioCommand_t * buf);
//@}

#if defined(__cplusplus)
}
#endif

#endif // _ns_audio_rpc_h_
